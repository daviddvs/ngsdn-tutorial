version: "3.4"

services:
  mininet1:
    image: opennetworking/ngsdn-tutorial:stratum_bmv2
    hostname: mininet1
    container_name: mininet1
    privileged: true
    tty: true
    stdin_open: true
    restart: always
    volumes:
      - ./tmp:/tmp
      - ./mininet:/mininet
    environment:
      - PYTHONPATH=:/root:/mininet
    #ports:
    #  - "50001:50001"
    #  - "50002:50002"
    #  - "50003:50003"
    #  - "50004:50004"
    # NGSDN_TOPO_PY is a Python-based Mininet script defining the topology. Its
    # value is passed to docker-compose as an environment variable, defined in
    # the Makefile.
    #entrypoint: "/mininet/${NGSDN_TOPO_PY}"
    entrypoint: "/mininet/topo-v6-1.py"
    network_mode: "host"
    #build:
    #  context: "."
    #  network: host
  mininet2:
    image: opennetworking/ngsdn-tutorial:stratum_bmv2
    hostname: mininet2
    container_name: mininet2
    privileged: true
    tty: true
    stdin_open: true
    restart: always
    volumes:
      - ./tmp:/tmp
      - ./mininet:/mininet
    #ports:
    #  - "50001:50001"
    #  - "50002:50002"
    #  - "50003:50003"
    #  - "50004:50004"
    # NGSDN_TOPO_PY is a Python-based Mininet script defining the topology. Its
    # value is passed to docker-compose as an environment variable, defined in
    # the Makefile.
    #entrypoint: "/mininet/${NGSDN_TOPO_PY}"
    entrypoint: "/mininet/topo-v6-2.py"
    network_mode: "host"
  onos:
    image: onosproject/onos:2.2.2
    hostname: onos
    container_name: onos
    ports:
      - "8181:8181" # HTTP
      - "8101:8101" # SSH (CLI)
    volumes:
      - ./tmp/onos:/root/onos/apache-karaf-4.2.8/data/tmp
    environment:
      - ONOS_APPS=gui2,drivers.bmv2,lldpprovider,hostprovider
    #links:
    #  - mininet
    network_mode: "host"
